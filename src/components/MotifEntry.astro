---
import { render } from "astro:content";
import { useI18n } from "../i18n/utils";
import type { AuthorContext, DocumentContext, TagsContext } from "../types";
import Article from "./Article.astro";
import ArticleTitle from "./ArticleTitle.astro";
import Tag from "./Tag.astro";
import YouMayLike from "./YouMayLike.astro";
import ArticleCover from "./ArticleCover.astro";
import ListItem from "./ListItem.astro";

export type Props = {
  author?: AuthorContext;
  document: DocumentContext;
  documents: DocumentContext[];
  tags: TagsContext;
};

const { author, document, documents, tags } = Astro.props;
const { id, data } = document;

const [_, identifier] = id.split('/');

const { t } = useI18n(Astro);

const { description, subtitle, title } = data;

const { Content } = await render(document);
---

<Article class="pt-0! px-0!" indexable>
  <ArticleTitle class:list={[
    "rounded-t-xl sticky top-0 px-4 lg:px-8 pt-4 lg:pt-8 z-10 bg-article-background dark:bg-article-background-dark -mr-5",
    subtitle && "!mb-2"
  ]}>
   {identifier.toUpperCase()} - {title}
  </ArticleTitle>
  <div class="px-4 lg:px-8" data-pagefind-weight="0.1">
    {
      subtitle && (
        <h2 class="!mt-2 text-center text-subtitle-foreground dark:text-subtitle-foreground-dark opacity-60 italic">
          {subtitle}
        </h2>
      )
    }
    <ArticleCover {...data}  />
    <div class="flex flex-col lg:flex-row justify-end">
      <p
        class="!m-0 !mb-8 text-2xl lg:text-3xl xl:text-4xl !font-heading text-balance"
        set:html={description}
      />
      <div class="flex flex-col lg:items-end gap-2 w-full font-heading">
        {
          author && (
            <span>{t("article.author.name", { name: author.data.name })}</span>
          )
        }
        {author?.data.title && <span>{author.data.title}</span>}
        {
          tags?.tags?.length > 0 && (
            <div class="flex flex-wrap flex-row lg:flex-row-reverse gap-2 lg:gap-4">
              {tags.tags.filter(t => !t.id.startsWith('definition/')).map((t) => (
                <Tag tag={t} />
              ))}
            </div>
          )
        }
      </div>
    </div>
    <ul class="not-prose grid grid-rows-2 md:grid-rows-3 auto-cols-[80%] md:auto-cols-[50%] lg:auto-cols-[33%] xl:auto-cols-[25%] 2xl:auto-cols-[16%] grid-flow-col overflow-x-auto overflow-y-hidden gap-3 md:p-3 scrollbar-none">
      {documents.map((d) => (
        <ListItem
          document={d}
        />
      ))}
    </ul>
    <Content />
    <YouMayLike document={document} />

    <div
      class="mt-6 rounded-lg bg-background dark:bg-background-dark p-4 shadow"
    >
      <script
        src="https://giscus.app/client.js"
        data-repo="aitorllj93/babilim-info"
        data-repo-id="R_kgDOOtOj4g"
        data-category="Comments"
        data-category-id="DIC_kwDOOtOj4s4CqX9A"
        data-mapping="pathname"
        data-strict="0"
        data-reactions-enabled="1"
        data-emit-metadata="0"
        data-input-position="top"
        data-theme="fro"
        data-lang="en"
        data-loading="lazy"
        crossorigin="anonymous"
        async
      ></script>
    </div>
  </div>
</Article>
